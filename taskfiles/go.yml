# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

set: [errexit, nounset, pipefail]
shopt: [globstar]

env:
  CGO_ENABLED: 0
  GOARCH:
    sh: go env GOARCH
  GOOS:
    sh: go env GOOS
  VERSION:
    sh: git describe --always --dirty

vars:
  BUILD_TARGETS: []

tasks:
  lint:
    desc: Lint Go files
    sources:
      - ./**/*.go
      - ./go.mod
      - ./go.sum
    cmds:
      - test -z $(goimports -l .)
      - go vet ./...
      - go fix ./...
      - staticcheck ./...
      - govulncheck ./...
      - golangci-lint run

  format:
    desc: Format Go files
    sources:
      - ./**/*.go
      - ./go.mod
      - ./go.sum
    cmd: goimports -w -l .

  test:
    desc: Run tests
    cmd: go test ./...

  update:
    desc: Update dependencies
    cmds:
      - go get -u all
      - go mod tidy

  build:
    desc: Build application
    sources:
      - ./**/*.go
      - ./go.mod
      - ./go.sum
    cmd: >-
      go build \
        -ldflags="-s -w -X 'main.version=${VERSION}'" \
        -o ./build/${APP}-${GOOS}-${GOARCH} \
        .

  build:all:
    desc: Build for all targets
    cmds:
      - for:
          var: BUILD_TARGETS
        cmd: >-
          export GOOS=$(echo {{.ITEM}} | cut -d/ -f1) ;
          export GOARCH=$(echo {{.ITEM}} | cut -d/ -f2) ;
          go build \
            -ldflags="-s -w -X 'main.version=${VERSION}'" \
            -o ./build/${APP}-${GOOS}-${GOARCH} \
            . ;

  clean:
    desc: Cleanup build files
    cmds:
      - rm -rf ./build/
      - rm -rf ./dist/
